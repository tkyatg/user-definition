// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userQueryService.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetByIDRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDRequest) Reset()         { *m = GetByIDRequest{} }
func (m *GetByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIDRequest) ProtoMessage()    {}
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4d691210e278263, []int{0}
}

func (m *GetByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDRequest.Unmarshal(m, b)
}
func (m *GetByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDRequest.Merge(m, src)
}
func (m *GetByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIDRequest.Size(m)
}
func (m *GetByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDRequest proto.InternalMessageInfo

func (m *GetByIDRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type GetByIDResponse struct {
	Uuid                 string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             string               `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	TelephoneNumber      string               `protobuf:"bytes,5,opt,name=telephone_number,json=telephoneNumber,proto3" json:"telephone_number,omitempty"`
	Gender               int64                `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetByIDResponse) Reset()         { *m = GetByIDResponse{} }
func (m *GetByIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetByIDResponse) ProtoMessage()    {}
func (*GetByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4d691210e278263, []int{1}
}

func (m *GetByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDResponse.Unmarshal(m, b)
}
func (m *GetByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDResponse.Marshal(b, m, deterministic)
}
func (m *GetByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDResponse.Merge(m, src)
}
func (m *GetByIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetByIDResponse.Size(m)
}
func (m *GetByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDResponse proto.InternalMessageInfo

func (m *GetByIDResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GetByIDResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetByIDResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetByIDResponse) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *GetByIDResponse) GetTelephoneNumber() string {
	if m != nil {
		return m.TelephoneNumber
	}
	return ""
}

func (m *GetByIDResponse) GetGender() int64 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *GetByIDResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetByIDResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GetByEmailAndPasswordRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByEmailAndPasswordRequest) Reset()         { *m = GetByEmailAndPasswordRequest{} }
func (m *GetByEmailAndPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*GetByEmailAndPasswordRequest) ProtoMessage()    {}
func (*GetByEmailAndPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4d691210e278263, []int{2}
}

func (m *GetByEmailAndPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByEmailAndPasswordRequest.Unmarshal(m, b)
}
func (m *GetByEmailAndPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByEmailAndPasswordRequest.Marshal(b, m, deterministic)
}
func (m *GetByEmailAndPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByEmailAndPasswordRequest.Merge(m, src)
}
func (m *GetByEmailAndPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_GetByEmailAndPasswordRequest.Size(m)
}
func (m *GetByEmailAndPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByEmailAndPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByEmailAndPasswordRequest proto.InternalMessageInfo

func (m *GetByEmailAndPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetByEmailAndPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type GetByEmailAndPasswordResponse struct {
	Uuid                 string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Password             string               `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	TelephoneNumber      string               `protobuf:"bytes,5,opt,name=telephone_number,json=telephoneNumber,proto3" json:"telephone_number,omitempty"`
	Gender               int64                `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetByEmailAndPasswordResponse) Reset()         { *m = GetByEmailAndPasswordResponse{} }
func (m *GetByEmailAndPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*GetByEmailAndPasswordResponse) ProtoMessage()    {}
func (*GetByEmailAndPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4d691210e278263, []int{3}
}

func (m *GetByEmailAndPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByEmailAndPasswordResponse.Unmarshal(m, b)
}
func (m *GetByEmailAndPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByEmailAndPasswordResponse.Marshal(b, m, deterministic)
}
func (m *GetByEmailAndPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByEmailAndPasswordResponse.Merge(m, src)
}
func (m *GetByEmailAndPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_GetByEmailAndPasswordResponse.Size(m)
}
func (m *GetByEmailAndPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByEmailAndPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByEmailAndPasswordResponse proto.InternalMessageInfo

func (m *GetByEmailAndPasswordResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GetByEmailAndPasswordResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetByEmailAndPasswordResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetByEmailAndPasswordResponse) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *GetByEmailAndPasswordResponse) GetTelephoneNumber() string {
	if m != nil {
		return m.TelephoneNumber
	}
	return ""
}

func (m *GetByEmailAndPasswordResponse) GetGender() int64 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *GetByEmailAndPasswordResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetByEmailAndPasswordResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*GetByIDRequest)(nil), "user.GetByIDRequest")
	proto.RegisterType((*GetByIDResponse)(nil), "user.GetByIDResponse")
	proto.RegisterType((*GetByEmailAndPasswordRequest)(nil), "user.GetByEmailAndPasswordRequest")
	proto.RegisterType((*GetByEmailAndPasswordResponse)(nil), "user.GetByEmailAndPasswordResponse")
}

func init() { proto.RegisterFile("userQueryService.proto", fileDescriptor_c4d691210e278263) }

var fileDescriptor_c4d691210e278263 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x93, 0xcb, 0x4e, 0xfa, 0x40,
	0x14, 0xc6, 0xff, 0x2d, 0xf7, 0xf3, 0x4f, 0x84, 0x4c, 0x80, 0x4c, 0x1a, 0x8d, 0xa4, 0xba, 0xc0,
	0x4d, 0x49, 0x70, 0xc3, 0x16, 0xa3, 0x31, 0x6e, 0x0c, 0x56, 0x5d, 0x9b, 0x96, 0x1e, 0xb1, 0x09,
	0xed, 0xd4, 0xb9, 0x68, 0x78, 0x1d, 0x9f, 0x80, 0x47, 0x34, 0x9d, 0x5e, 0x14, 0x02, 0xfa, 0x02,
	0xee, 0xe6, 0x7c, 0xfd, 0x4e, 0x27, 0xe7, 0xf7, 0xcd, 0x81, 0xbe, 0x12, 0xc8, 0xef, 0x14, 0xf2,
	0xd5, 0x3d, 0xf2, 0xb7, 0x70, 0x8e, 0x4e, 0xc2, 0x99, 0x64, 0xa4, 0x9a, 0xea, 0xd6, 0xf1, 0x82,
	0xb1, 0xc5, 0x12, 0x47, 0x5a, 0xf3, 0xd5, 0xf3, 0x48, 0x86, 0x11, 0x0a, 0xe9, 0x45, 0x49, 0x66,
	0xb3, 0x4f, 0xe1, 0xe0, 0x1a, 0xe5, 0xc5, 0xea, 0xe6, 0xd2, 0xc5, 0x57, 0x85, 0x42, 0x12, 0x02,
	0x55, 0xa5, 0xc2, 0x80, 0x1a, 0x03, 0x63, 0xd8, 0x72, 0xf5, 0xd9, 0xfe, 0x30, 0xa1, 0x5d, 0xda,
	0x44, 0xc2, 0x62, 0x81, 0xbb, 0x7c, 0xa9, 0x16, 0x7b, 0x11, 0x52, 0x33, 0xd3, 0xd2, 0x33, 0xe9,
	0x42, 0x0d, 0x23, 0x2f, 0x5c, 0xd2, 0x8a, 0x16, 0xb3, 0x82, 0x58, 0xd0, 0x4c, 0x3c, 0x21, 0xde,
	0x19, 0x0f, 0x68, 0x55, 0x7f, 0x28, 0x6b, 0x72, 0x06, 0x1d, 0x89, 0x4b, 0x4c, 0x5e, 0x58, 0x8c,
	0x4f, 0xb1, 0x8a, 0x7c, 0xe4, 0xb4, 0xa6, 0x3d, 0xed, 0x52, 0xbf, 0xd5, 0x32, 0xe9, 0x43, 0x7d,
	0x81, 0x71, 0x80, 0x9c, 0xd6, 0x07, 0xc6, 0xb0, 0xe2, 0xe6, 0x15, 0x99, 0x40, 0x6b, 0xce, 0xd1,
	0x93, 0x18, 0x4c, 0x25, 0x6d, 0x0c, 0x8c, 0xe1, 0xff, 0xb1, 0xe5, 0x64, 0x2c, 0x9c, 0x82, 0x85,
	0xf3, 0x50, 0xb0, 0x70, 0xbf, 0xcc, 0x69, 0xa7, 0x4a, 0x82, 0xbc, 0xb3, 0xf9, 0x7b, 0x67, 0x69,
	0xb6, 0x67, 0x70, 0xa8, 0x19, 0x5d, 0xa5, 0x03, 0x4e, 0xe3, 0x60, 0x96, 0xcf, 0x53, 0x80, 0x2d,
	0x41, 0x18, 0xfb, 0x40, 0x98, 0x9b, 0x20, 0xec, 0xb5, 0x09, 0x47, 0x7b, 0x7e, 0xf9, 0x17, 0xc2,
	0xce, 0x10, 0xc6, 0x6b, 0x03, 0x3a, 0x8f, 0x5b, 0x1b, 0x41, 0x26, 0xd0, 0xc8, 0x5f, 0x2f, 0xe9,
	0x3a, 0xe9, 0x5e, 0x38, 0x9b, 0x6f, 0xde, 0xea, 0x6d, 0xa9, 0x19, 0x5d, 0xfb, 0x1f, 0xf1, 0xa1,
	0xb7, 0x33, 0x00, 0x62, 0x7f, 0xeb, 0xd8, 0x13, 0xb8, 0x75, 0xf2, 0xa3, 0xa7, 0xb8, 0xc3, 0xaf,
	0xeb, 0x89, 0xce, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xc2, 0x87, 0xc5, 0xca, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserQueryServiceClient is the client API for UserQueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserQueryServiceClient interface {
	GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetByIDResponse, error)
	GetByEmailAndPassword(ctx context.Context, in *GetByEmailAndPasswordRequest, opts ...grpc.CallOption) (*GetByEmailAndPasswordResponse, error)
}

type userQueryServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserQueryServiceClient(cc *grpc.ClientConn) UserQueryServiceClient {
	return &userQueryServiceClient{cc}
}

func (c *userQueryServiceClient) GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetByIDResponse, error) {
	out := new(GetByIDResponse)
	err := c.cc.Invoke(ctx, "/user.UserQueryService/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userQueryServiceClient) GetByEmailAndPassword(ctx context.Context, in *GetByEmailAndPasswordRequest, opts ...grpc.CallOption) (*GetByEmailAndPasswordResponse, error) {
	out := new(GetByEmailAndPasswordResponse)
	err := c.cc.Invoke(ctx, "/user.UserQueryService/GetByEmailAndPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserQueryServiceServer is the server API for UserQueryService service.
type UserQueryServiceServer interface {
	GetByID(context.Context, *GetByIDRequest) (*GetByIDResponse, error)
	GetByEmailAndPassword(context.Context, *GetByEmailAndPasswordRequest) (*GetByEmailAndPasswordResponse, error)
}

// UnimplementedUserQueryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserQueryServiceServer struct {
}

func (*UnimplementedUserQueryServiceServer) GetByID(ctx context.Context, req *GetByIDRequest) (*GetByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedUserQueryServiceServer) GetByEmailAndPassword(ctx context.Context, req *GetByEmailAndPasswordRequest) (*GetByEmailAndPasswordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByEmailAndPassword not implemented")
}

func RegisterUserQueryServiceServer(s *grpc.Server, srv UserQueryServiceServer) {
	s.RegisterService(&_UserQueryService_serviceDesc, srv)
}

func _UserQueryService_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserQueryServiceServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserQueryService/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserQueryServiceServer).GetByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserQueryService_GetByEmailAndPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByEmailAndPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserQueryServiceServer).GetByEmailAndPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserQueryService/GetByEmailAndPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserQueryServiceServer).GetByEmailAndPassword(ctx, req.(*GetByEmailAndPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserQueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserQueryService",
	HandlerType: (*UserQueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByID",
			Handler:    _UserQueryService_GetByID_Handler,
		},
		{
			MethodName: "GetByEmailAndPassword",
			Handler:    _UserQueryService_GetByEmailAndPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userQueryService.proto",
}
